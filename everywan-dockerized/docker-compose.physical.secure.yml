---
version: "2.3"

services:
  keystone:
    container_name: keystone
    build:
      context: ./keystone/
      args:
        KEYSTONE_DB_PASSWORD: ${KEYSTONE_DB_PASSWORD}
        KEYSTONE_DB_HOST: ${KEYSTONE_DB_HOST:-"database"}
        KEYSTONE_ADMIN_PASSWORD: ${KEYSTONE_ADMIN_PASSWORD}
        HTTP: ${HTTP:-http}
        KEYSTONE_HOST: ${KEYSTONE_HOST:-"0.0.0.0"}
    depends_on:
      - database
    networks:
      - keystone-net
      - everywan-net
    env_file:
    - ./keystone/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      KEYSTONE_ADMIN_PASSWORD: ${KEYSTONE_ADMIN_PASSWORD}
      KEYSTONE_DB_PASSWORD: ${KEYSTONE_DB_PASSWORD}
      KEYSTONE_DB_HOST: ${KEYSTONE_DB_HOST:-"database"}
      KEYSTONE_DB_USER: ${KEYSTONE_DB_USER:-keystone}
      KEYSTONE_DB_NAME: ${KEYSTONE_DB_NAME:-keystone}
      KEYSTONE_DEBUG: ${KEYSTONE_DEBUG:-"false"}
      HTTP: ${HTTP:-http}
    restart: always

  database:
    container_name: keystone-database
    image: mariadb:10.4.5-bionic
    networks:
      - keystone-net
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MARKET_DB_PASSWORD: ${MARKET_DB_PASSWORD}
      PROVIDER_DB_PASSWORD: ${PROVIDER_DB_PASSWORD}
      MYSQL_USER: ${KEYSTONE_DB_USER:-keystone}
      MYSQL_PASSWORD: ${KEYSTONE_DB_PASSWORD}
      MYSQL_DATABASE: ${KEYSTONE_DB_NAME:-keystone}
    volumes:
      - keystone_db_volume:/var/lib/mysql
    restart: always


  mongodb:
    container_name: mongodb
    image: mongo:3.6
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb_volume:/data/db
    networks: 
      - everywan-net
    restart: always


  everyboss:
    container_name: everyboss
    image: ghcr.io/cscarpitta/everyboss:latest
    networks: 
      - everywan-net
    environment:
      KEYSTONE_HOST: ${KEYSTONE_HOST:-keystone}
      KEYSTONE_PORT: ${KEYSTONE_PORT:-5000}
      CONTROLLER_IP: ${CONTROLLER_HOST:-everyedgeos}
      CONTROLLER_PORT: ${CONTROLLER_PORT:-54321}
      MONGODB_HOST: ${MONGODB_HOST:-mongodb}
      MONGODB_PORT: ${MONGODB_PORT:-27017}
      MONGODB_USERNAME: ${MONGODB_USERNAME:-root}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD:-12345678}
    restart: always


  everyedgeos:
    container_name: everyedgeos
    image: ghcr.io/cscarpitta/everyedgeos:latest
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    networks:
      - everywan-net
      - everyedgeos-net
    sysctls:
      - "net.ipv6.conf.all.disable_ipv6=0"
    ports:
      - "50061:50061"
      - "4789:4789/udp"
    environment:
      MONGODB_HOST: ${MONGO_IP:-mongodb}
      MONGODB_PORT: ${MONGO_PORT:-27017}
    restart: always


  everygui:
    container_name: everygui
    build: ./everygui_ssl
    image: everywan/everygui
    volumes:
      #- ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - everywan_nginx_ssl:/etc/nginx/ssl
      - everywan_certbot_certs:/etc/letsencrypt
      - everywan_netgroup_uniroma2_it_certbot:/var/www/certbot/everywan.netgroup.uniroma2.it
    networks: 
      - everywan-net
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - ./config.env
    environment:
      EVERYBOSS_IP: ${EVERYBOSS_HOST:-everyboss}
    restart: always

  certbot:
    build: ./certbot
    container_name: everywan-certbot
    image: everywan/certbot
    env_file:
      - ./config.env
    networks:
      - everywan-net
    volumes:
      - everywan_certbot_certs:/etc/letsencrypt
      - everywan_netgroup_uniroma2_it_certbot:/var/www/certbot/everywan.netgroup.uniroma2.it
    depends_on:
      - everygui

  cron:
    build: ./cron
    container_name: everywan-cron
    image: everywan/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    depends_on:
      - everygui
      - certbot


  #everywan-virtualnet:
  #  container_name: everywan-virtualnet
  #  image: ghcr.io/cscarpitta/everywan-virtualnet:latest
  #  cap_add:
  #    - NET_ADMIN
  #  networks:
  #    - everywan-net
  #  privileged: true
  #  environment:
  #    - DISPLAY
  #  volumes:
  #    - /tmp/.X11-unix:/tmp/.X11-unix
  #    - /lib/modules:/lib/modules
  #  tty: true
  #  stdin_open: true
  #  sysctls:
  #      - net.ipv6.conf.all.disable_ipv6=0
  #  depends_on:
  #    - mongodb


networks:
  keystone-net:
  nbi-net:
  everywan-net:
    ipam:
      config:
        - subnet: "2001:db9:1::/64"
  everyedgeos-net:
    enable_ipv6: true
    ipam:
      config:
        - subnet: "2001:db9:1::/64"


volumes:
  everywan_nginx_ssl:
  everywan_certbot_certs:
  everywan_netgroup_uniroma2_it_certbot:
  mongodb_volume:
  keystone_db_volume:
